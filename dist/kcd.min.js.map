{"version":3,"sources":["kcd.min.js"],"names":["angular","module","directive","$parse","transclude","link","scope","$el","attrs","ctrls","compile","clone","clonedScope","previousElements","append","recompile","remove","empty","$watch","kcdRecompile","_new","_old","useBoolean","hasOwnProperty","useEmit","$emit","assign"],"mappings":"AAAAA,QAAQC,OAAO,OAAO,mBACtBD,QAAQC,OAAO,qBAEfD,QAAQC,OAAO,kBACZC,UAAU,gBAAiB,SAAU,SAAUC,GAC/C,OACCC,YAAY,EACZC,KAAM,SAAcC,EAAOC,EAAKC,EAAOC,EAAOL,GAK7C,QAASM,KACRN,EAAWE,EAAO,SAAUK,EAAOC,GAGlCC,EAAmBF,EACnBJ,EAAIO,OAAOH,KAIb,QAASI,KACJF,IACHA,EAAiBG,SACjBH,EAAmB,KACnBN,EAAIU,SAGLP,IApBD,GAAIG,EAEJH,KAqBAJ,EAAMY,OAAOV,EAAMW,aAAc,SAAUC,EAAMC,GAChD,GAAIC,GAAad,EAAMe,eAAe,gBACjCD,GAAgBF,GAAiB,UAATA,KAAwBE,GAAgBF,GAAQA,IAASC,KAIlFC,IACmB,SAAlBd,EAAMgB,QACTlB,EAAMmB,MAAM,YAEZtB,EAAOK,EAAMW,cAAcO,OAAOpB,GAAO,IAG3CS,MAC+C,gBAAtCZ,GAAOK,EAAMW,cAAcb","file":"kcd.min.js","sourcesContent":["angular.module('kcd',['kcd.directives']);\nangular.module('kcd.directives', []);\n\nangular.module('kcd.directives')\r\n  .directive('kcdRecompile', ['$parse', function ($parse) {\r\n  \treturn {\r\n  \t\ttransclude: true,\r\n  \t\tlink: function link(scope, $el, attrs, ctrls, transclude) {\r\n  \t\t\tvar previousElements;\r\n\r\n  \t\t\tcompile();\r\n\r\n  \t\t\tfunction compile() {\r\n  \t\t\t\ttransclude(scope, function (clone, clonedScope) {\r\n  \t\t\t\t\t// transclude creates a clone containing all children elements;\r\n  \t\t\t\t\t// as we assign the current scope as first parameter, the clonedScope is the same\r\n  \t\t\t\t\tpreviousElements = clone;\r\n  \t\t\t\t\t$el.append(clone);\r\n  \t\t\t\t});\r\n  \t\t\t}\r\n\r\n  \t\t\tfunction recompile() {\r\n  \t\t\t\tif (previousElements) {\r\n  \t\t\t\t\tpreviousElements.remove();\r\n  \t\t\t\t\tpreviousElements = null;\r\n  \t\t\t\t\t$el.empty();\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tcompile();\r\n  \t\t\t}\r\n\r\n  \t\t\tscope.$watch(attrs.kcdRecompile, function (_new, _old) {\r\n  \t\t\t\tvar useBoolean = attrs.hasOwnProperty('useBoolean');\r\n  \t\t\t\tif ((useBoolean && (!_new || _new === 'false')) || (!useBoolean && (!_new || _new === _old))) {\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n  \t\t\t\t// reset kcdRecompile to false if we're using a boolean\r\n  \t\t\t\tif (useBoolean) {\r\n  \t\t\t\t\tif (attrs.useEmit === 'true')\r\n  \t\t\t\t\t\tscope.$emit(\"resetKcd\");\r\n\t\t\t\t\t\telse\r\n  \t\t\t\t\t\t$parse(attrs.kcdRecompile).assign(scope, false);\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\trecompile();\r\n  \t\t\t}, typeof $parse(attrs.kcdRecompile)(scope) === 'object');\r\n  \t\t}\r\n  \t};\r\n  }]);\r\n"],"sourceRoot":"/source/"}